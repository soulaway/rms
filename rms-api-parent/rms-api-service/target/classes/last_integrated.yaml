swagger: '2.0'
info:
  title: API Registration portal
  description: This documentation describes the interfaces between different blocks of "Smart Grid Vendée Aggregator Portal" solution in the Smart Grid Vendée project.
  version: "1.0.0"
# the domain of the service
host: erdf.derms.fr
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
consumes:
  - application/json
  - application/xml
produces:
  - application/json
  - application/xml
  - file/csv
paths:

  /organizations/me:
    get:
      summary: Provides my organization's details
      description: |
        Provides my organization's details
      tags:
        - Login
      responses:
        200:
          description: My organization
          schema:
              $ref: '#/definitions/Organization'
        403:
          description: The user is not recognized by the LDAP
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /organizations:
    get:
      summary: List of organizations
      description: |
        This service provided the list of aggregators and DSOs registered in the system, with status active. Only the DSO can access the list of organizations.
      tags:
        - DSO
      responses:
        200:
          description: An array containing the set of organizations
          schema:
            type: array
            items:
              $ref: '#/definitions/Organization'
        403:
          description: The user does not have DSO's privileges
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    post:
      summary: Create a new aggregator
      description: |
        This service allows to create a new aggregator. The name should be identical to the organization name in the LDAP, otherwise the operator will not be able to authenticate.
      parameters:
        - name: aggregator
          in: body
          description: aggregator to be added. Id (and status) are not taken into account.
          required: true
          schema:
            $ref: '#/definitions/Organization'
      tags:
        - DSO
      responses:
        200:
          description: The aggregator newly registered.
          schema:
            $ref: '#/definitions/Organization'
        403:
          description: The user does not have DSO's privileges
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /organizations/{organizationId}:
    delete:
      summary: Remove an aggregator
      description: |
        This service allows to remove an aggregator to the system.
        WARNING :
        Once the aggregator has the status cancelled, members will be no longer authorized to connnect, and all its registrations and entities will become cancelled also.
        Only the DSO can remove an aggregator, and the DSO itself cannot be removed.
      parameters:
        - name: organizationId
          in: path
          description: The aggregator organization's Id.
          required: true
          type: number
          format: long
      tags:
        - DSO
      responses:
        200:
          description: The deleted aggregator is returned.
          schema:
            $ref: '#/definitions/Organization'
        403:
          description: The user does not have the right to do this operation.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The resource doesn't exist
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /periods:
    get:
      summary: Periods list
      description: |
        This service provides the list of periods stored in the system.
      tags:
        - DSO
      responses:
        200:
          description: An array containing existing periods
          schema:
            type: array
            items:
              $ref: '#/definitions/Period'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /organizations/{organizationId}/entities:
    get:
      summary: List of entities
      description: |
        This service provides the list of entities registered for a given aggregator. Only an operator of the aggregator or DSO can access the list of entities.
      parameters:
        - name: organizationId
          in: path
          description: The aggregator organization's Id.
          required: true
          type: number
          format: long
        - name: period
          in: query
          type: integer
          format: int32
          description: Optional, period for which the entity list is requested (Not yet implemented)
    #    - name: offset
    #      in: query
    #      type: integer
    #      format: int32
    #      description: Offset the list of returned results by this amount. Default is zero.
    #    - name: limit
    #      in: query
    #      type: integer
    #      format: int32
    #      description: Number of items to retrieve. Default is 5, maximum is 100.
      tags:
        - Entity
        - DSO
      responses:
        200:
          description: An array containing entities
          schema:
            type: array
            items:
              $ref: '#/definitions/Entity'
        403:
          description: The user is not allowed to access to this aggregator's resource.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The resource doesn't exist
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /organizations/{organizationId}/entities:
    post:
      summary: Create an entity
      description: |
        This service creates a new entity owned by the aggregator identified by the ID in the URL.
      parameters:
        - name: organizationId
          in: path
          description: The aggregator organization's Id.
          required: true
          type: number
          format: long
        - name: entity
          in: body
          description: Entity to be created in the system
          required: true
          schema:
            $ref: '#/definitions/Entity'
      tags:
        - Entity
      responses:
        200:
          description: The newly created entity
          schema:
            $ref: '#/definitions/Entity'
        403:
          description: The user is not allowed to create this resource.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The resource doesn't exist
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /organizations/{organizationId}/entities/{entityId}:
    delete:
      summary: Delete an entity
      description: |
        This service allows you to delete an entity belonging to the aggregator.
      parameters:
        - name: organizationId
          in: path
          description: The aggregator organization's Id.
          required: true
          type: number
          format: long
        - name: entityId
          in: path
          description: Entity Id.
          required: true
          type: number
          format: long
      tags:
        - Entity
      responses:
        200:
          description: The deleted entity is sent to the customer.
          schema:
            $ref: '#/definitions/Entity'
        403:
          description: The user is not allowed to delete this resource.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The resource doesn't exist
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Updating an entity
      description: |
        This service allows updating an entity belonging to the aggregator. Field that can be updated by this mechanism are as follows :
        -  min_activation_duration
        -  max_activation_duration
        -  mobilisation_duration
        -  max_daily_activation
        -  meter_readings_type
        -  registration_list

      parameters:
        - name: organizationId
          in: path
          description: The aggregator organization's Id.
          required: true
          type: number
          format: long
        - name: entityId
          in: path
          description: Entity Id.
          required: true
          type: number
          format: long
      tags:
        - Entity
      responses:
        200:
          description: The deleted entity is sent to the client.
          schema:
            $ref: '#/definitions/Entity'
        403:
          description: The user is not allowed to modify this resource.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The resource doesn't exist
          schema:
            $ref: '#/definitions/Error'
        409:
          description: If fields other than those specified above are modified, the application will return an error 409 - Conflict.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /organizations/{organizationId}/entities/{entityId}/activate:
    post:
      summary: Activate an entity
      description: |
        This service activates an entity belonging to the aggregator. An entity may be activated only if the associated Group are in an active status.
      parameters:
        - name: organizationId
          in: path
          description: The aggregator organization's Id.
          required: true
          type: number
          format: long
        - name: entityId
          in: path
          description: Entity Id.
          required: true
          type: number
          format: long
        - name: answer
          in: body
          description: Contains the new status (accepted or rejected), and the reason for rejection if necessary. The date will be overwritten by the server to the date of reception.
          required: true
          schema:
            $ref: '#/definitions/Validation'

      tags:
        - Entity
      responses:
        200:
          description: The entity that has been validated is returned to the client
          schema:
            $ref: '#/definitions/Entity'
        403:
          description: The user is not allowed to modify this resource.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The resource doesn't exist
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /organizations/{organizationId}/entities/{entityId}/submitForValidation:
    post:
      summary: Submit an Entity for DSO approval
      description: |
        This service allows to submit for approval an entity of the aggregator.
      parameters:
        - name: organizationId
          in: path
          description: The aggregator organization's Id.
          required: true
          type: number
          format: long
        - name: entityId
          in: path
          description: Entity Id.
          required: true
          type: number
          format: long
      tags:
        - Entity
      responses:
        200:
          description: The entity that has been submitted with its new status
          schema:
            type: array
            items:
              $ref: '#/definitions/Entity'
        403:
          description: The user is not allowed to modify this resource.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The resource doesn't exist
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


  /organizations/{organizationId}/groups:
    get:
      summary: List of Groups
      description: |
        This service provides the list of groups for a given aggregator. Only an operator of this aggregator or DSO can access this list.
      parameters:
        - name: organizationId
          in: path
          description: The aggregator organization's Id.
          required: true
          type: number
          format: long
        - name: period
          in: query
          type: integer
          format: int32
          description: Optionaly, period for which the group list is requested
    #    - name: offset
    #      in: query
    #      type: integer
    #      format: int32
    #      description: Offset the list of returned results by this amount. Default is zero.
    #    - name: limit
    #      in: query
    #      type: integer
    #      format: int32
    #      description: Number of items to retrieve. Default is 5, maximum is 100.
      tags:
        - Group
        - DSO
      responses:
        200:
          description: A list containing groups
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
        403:
          description: The user has no right to access groups of this aggregator
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The resource doesn't exist
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /organizations/{organizationId}/groups/{groupId}:
    put:
      summary: Update a group
      description: |
        This service allows updating a group belonging to the aggregator. Field that can be updated by this mechanism are as follows :
        -  min_flex
        -  max_flex
        -  registration_list

      parameters:
        - name: organizationId
          in: path
          description: The aggregator organization's Id.
          required: true
          type: number
          format: long
        - name: groupId
          in: path
          description: Group Id.
          required: true
          type: number
          format: long
      tags:
        - Group
      responses:
        200:
          description: The modified group is returned to the client.
          schema:
            $ref: '#/definitions/Group'
        403:
          description: The user has no right to access groups of this aggregator
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The resource doesn't exist
          schema:
            $ref: '#/definitions/Error'
        409:
          description: If fields other than those specified above are modified, the application will return an error 409 - Conflict.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /organizations/{organizationId}/groups/{groupId}/activate:
    post:
      summary: Activate a group
      description: |
        This service activates a group belonging to the aggregation. The validation of all groups of an entity is required to validate that entity.
      parameters:
        - name: organizationId
          in: path
          description: The aggregator organization's Id.
          required: true
          type: number
          format: long
        - name: groupId
          in: path
          description: Group Id.
          required: true
          type: number
          format: long
        - name: answer
          in: body
          description: Contains the new status (accepted or rejected), and the reason for rejection if necessary. The date will be overwritten by the server to the date of reception.
          required: true
          schema:
            $ref: '#/definitions/Validation'

      tags:
        - Group
      responses:
        200:
          description: The group that has been validated is returned to the customer
          schema:
            $ref: '#/definitions/Group'
        403:
          description: The user has no right to access groups of this aggregator
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The resource doesn't exist
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


  /organizations/{organizationId}/registrations:
    get:
      summary: List of registration
      description: |
        This service provided a list of registrations for a given aggregator. Only an operator of the aggregator or DSO can access the list of registrations.
      parameters:
        - name: organizationId
          in: path
          description: The aggregator organization's Id.
          required: true
          type: number
          format: long
        - name: period
          in: query
          type: integer
          format: int32
          description: Optional, period for which the entity list is requested
    #    - name: offset
    #      in: query
    #      type: integer
    #      format: int32
    #      description: Offset the list of returned results by this amount. Default is zero.
    #    - name: limit
    #      in: query
    #      type: integer
    #      format: int32
    #      description: Number of items to retrieve. Default is 5, maximum is 100.
      tags:
        - Registration
        - DSO
      responses:
        200:
          description: An array containing the set of registrations
          schema:
            type: array
            items:
              $ref: '#/definitions/Registration'
        403:
          description: The user is not allowed to access this resource.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The resource doesn't exist
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    post:
      summary: Create a registration
      description: |
        This service creates a new registration owned by the aggregator identified by the ID in the URL.
      parameters:
        - name: organizationId
          in: path
          description: The aggregator organization's Id.
          required: true
          type: number
          format: long
        - name: registration
          in: body
          description: Registration to create the system belonging
          required: true
          schema:
            $ref: '#/definitions/Registration'
      tags:
        - Registration
      responses:
        200:
          description: The newly created registration
          schema:
            $ref: '#/definitions/Registration'
        403:
          description: The user is not allowed to create this resource.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The resource doesn't exist
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /organizations/{organizationId}/registrations/{registrationId}:
    delete:
      summary: Delete a registration
      description: |
        This service allows you to delete a registration belonging to the aggregator. The registration will become "cancelled"
      parameters:
        - name: organizationId
          in: path
          description: The aggregator organization's Id.
          required: true
          type: number
          format: long
        - name: registrationId
          in: path
          description: Registration's Id.
          required: true
          type: number
          format: long
      tags:
        - Registration
      responses:
        200:
          description: The deleted registration is returned to the client.
          schema:
            $ref: '#/definitions/Registration'
        403:
          description: The user is not allowed to delete this resource.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The resource doesn't exist
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /organizations/{organizationId}/registrations/{registrationId}/submitForValidation:
    post:
      summary: Submit a registration for approval
      description: |
        This service allows you to submit a registration belonging to the aggregator for validation.
      parameters:
        - name: organizationId
          in: path
          description: The aggregator organization's Id.
          required: true
          type: number
          format: long
        - name: registrationId
          in: path
          description: Registration's Id.
          required: true
          type: number
          format: long
      tags:
        - Registration
      responses:
        200:
          description: The registration that has been submitted for validation
          schema:
            $ref: '#/definitions/Registration'
        403:
          description: The user is not allowed to submit this resource.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The resource doesn't exist
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /organizations/{organizationId}/registrations/{registrationId}/activate:
    post:
      summary: Activate a registration
      description: |
        This service activate a registration belonging to aggregator. Only validated registrations can be used as part of entities.
      parameters:
        - name: organizationId
          in: path
          description: The aggregator organization's Id.
          required: true
          type: number
          format: long
        - name: registrationId
          in: path
          description: Registration's Id.
          required: true
          type: number
          format: long
        - name: answer
          in: body
          description: Contains the new status (accepted or rejected), and the reason for rejection if necessary. The date will be overwritten by the server to the date of reception.
          required: true
          schema:
            $ref: '#/definitions/Validation'

      tags:
        - Registration
      responses:
        200:
          description: The registration that has been validated is returned to the client.
          schema:
            $ref: '#/definitions/Registration'
        403:
          description: The user is not allowed to modify this resource.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The resource doesn't exist
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


  /mapping:
    get:
      summary: Get the mapping between the GDO codes and anonymized network codes
      description: |
        This service provides the mapping between the GDO codes and anonymized network codes

      tags:
        - DSO
      responses:
        200:
          description: A table containing the list of mappings GDO code - anonymized code
          schema:
            type: object
            items:
              $ref: '#/definitions/Mappings'
        403:
          description: The user is not allowed to access this resource.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /exports/CIM/periods/{periodId}:
    get:
      summary: Export CIM
      description: |
        This service provides the CIM export of all data from a given period, as required for market applications.
      parameters:
        - name: periodId
          in: path
          description: Period's Id.
          required: true
          type: number
          format: long
      tags:
        - Export
        - DSO
      responses:
        200:
          description: CIM format file
          schema:
            type: file
        403:
          description: The user is not allowed to access this resource.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The resource doesn't exist
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /exports/CSV/organizations/{organizationId}/periods/{periodId}:
    get:
      summary: CSV export for aggregators
      description: |
        This service allows an aggregator to export to CSV-format all its validated data relating to a given period.
      parameters:
        - name: periodId
          in: path
          description: Period's Id.
          required: true
          type: number
          format: long
        - name: organizationId
          in: path
          description: The aggregator organization's Id.
          required: true
          type: number
          format: long
      tags:
        - Export
      responses:
        200:
          description: File in CSV format
          schema:
            type: file
            description: Export CSV
        403:
          description: The user is not allowed to access this resource.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The resource doesn't exist
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  Organization:
    type: object
    description: An organization which participates to the MGCD market (aggregators which submit offers, but also the DSO)
    properties:
      id:
        type: number
        format: long
        description: Organization Id
      name:
        type: string
        description: Name of the aggregator
      status:
        type: string
        description: Status of the aggregator (active, cancelled)
      role:
        type: string
        description: Role of the organization (aggregator or DSO)
      adress:
        type: string
        description: Adress of the aggregator (street...)
      postal_code:
        type: string
        description: Postal code of the aggregator
      city:
        type: string
        description: City of the aggregator

  Period:
    type: object
    description: Market period
    properties:
      id:
        type: number
        format: long
        description: Period Id
      start_date:
        type: string
        format: date
        description: Period start date
      end_date:
        type: string
        format: date
        description: Expiry date of the period

  Location:
    type: object
    description: The sites (locations) represent information provided by ERDF for physical sites that have subscribed to a contract with ErDF. They are identified by a globally unique PDL, PRM, CARD identifiers
    properties:
      id:
        type: integer
        format: int32
        description: PDL, PRM, CARD identifier
      network_code:
        type: string
        description: Network code used to locate the record
      usage_type:
        type: string
        description: Network usage (Withdrawal, Injection)

  Registration:
    type: object
    properties:
      location:
        $ref: '#/definitions/Location'
      aggregator_id:
        type: number
        format: long
        description: Id of the aggregator owner of the registration
      period_id:
        type: number
        format: long
        description: The period of group validity
      market_mechanism:
        type: string
        description: Market mechanism which will involve the registration (MGCD, MA, NEBEF)
      meter_readings_type:
        type: string
        description: Meter readings type (Remote reading, Profile without CdC, Profile with CdC)
      participation_agreement:
        type: boolean
        description: Site agreement to participate in the mechanism
      publication_agreement:
        type: boolean
        description: Site agreement to publish the load curves
      flexibility_duration:
        type: integer
        format: int32
        description: Maximum contractual duration of flexibility (in minutes)
      generator_use:
        type: boolean
        description: Utilisation of an electrogenerator group
      generator_coupling:
        type: string
        description: Coupling mode of the electrogenerator group (permanent, fugitive, none)
      max_rebound:
        type: integer
        format: int32
        description: Maximum rebound power  in kW
      charge_type:
        type: string
        description: Enum, TBD
      rebound_type:
        type: string
        description: "Enum: None, Heater, Other"
      energy_shift_type:
        type: string
        description: Enum, TBD

      meter_installation_date:
        type: string
        format: date
        description: Installation date of the measuring device
      object_of_measure:
        type: string
        description: TBD (measure object)
      min_flex:
        type: integer
        format: int32
        description: Minimal flexibility that can be activated in the group (in KW)
      max_flex:
        type: integer
        format: int32
        description: Maximal flexibility that can be activated in the group (in KW)
      group_id:
        type: number
        description: Group's id to which this registration belongs.
      status:
        type: string
        description: Registration's status (draft, pending, accepted, rejected, canceled)
      validation_history:
        description: Validation history related to registration
        type: array
        items:
          $ref: '#/definitions/Validation'

  Availability:
    description: Shows a time interval set of 48 half-hourly from 00:00-00:30 to 23:30-00:00, each interval containing a boolean indicating availability
    type: object
    properties:
      id:
        type: number
        format: long
        description: Availability Id
      time_series:
        type: array
        items:
          type: boolean
          description: Indicate availability for the corresponding half-time period.

  Entity:
    type: object
    properties:
      id:
        type: number
        format: long
        description: Entity Id
      aggregator_id:
        type: number
        format: long
        description: Entity owner's aggregator Id
      period_id:
        type: number
        format: long
        description: Period Id of entity's validity
      status:
        type: string
        description: Entity status (draft, pending, accepted, rejected, cancelled)
      market_mechanism:
        type: string
        description: Mechanism to which the entity belongs (MA, NEBEF, MGCD)
      network_code:
        type: string
        description: Network code to locate the entity (MGCD mechanism)
      usage_type:
        type: string
        description: Type of network usage (Withdrawal, Injection)
      min_activation_duration:
        type: integer
        format: int32
        description: Minimum activation duration of the flexibility (in minutes)
      max_activation_duration:
        type: integer
        format: int32
        description: Maximum activation duration of the flexibility (in minutes)
      notification_duration:
        type: integer
        format: int32
        description: Notification duration of the flexibility (in minutes)
      max_daily_activation:
        type: integer
        format: int32
        description: Maximum number of activations per day
      availability:
        description: Availability which contains 48 intervals half-hourly from 00:00-00:30 to 23:30-00:00, with 1 = disponbile, 0 = disabled
        $ref: '#/definitions/Availability'
      external_id:
        type: string
        description: MA/NEBEF identification of the entity (MA / NEBEF mechanisms)
      meter_readings_type:
        type: string
        description: Meter readings type (Remote reading, Profile without CdC, Profile with CdC)
      min_flex:
        type: integer
        format: int32
        description: Minimal flexibility that can be activated in the entity (in KW)
      max_flex:
        type: integer
        format: int32
        description: Maximal flexibility that can be activated in the entity (in KW)
      registration_list:
        type: array
        description: Registration ids
        items:
          type: number
          format: long
      validation_history:
        description: Validation history related to the entity
        type: array
        items:
          $ref: '#/definitions/Validation'


  # Representative:
  #   description: Contact person for an entity / registration
  #   type: object
  #   properties:
  #     first_name:
  #       type: string
  #       description: Interlocutor First name
  #     last_name:
  #       type: string
  #       description: Interlocutor Last name

  Group:
    description: Group of registrations belonging to an entity and located under the same MT/LV substation
    type: object
    properties:
      id:
        type: number
        format: long
        description: Group Id
      aggregator_id:
        type: number
        format: long
        description: Group owner aggregator Id
      period_id:
        type: number
        format: long
        description: Period Id of group validity
      entity_id:
        type: number
        format: long
        description: Identifier of the entity corresponding to the group
      network_code:
        type: string
        description: Network code of the group location
      status:
        type: string
        description: Status of the entity to which is attached the group (draft, pending, accepted, rejected, canceled)
      min_flex:
        type: integer
        format: int32
        description: Maximal flexibility that can be activated in the group (in KW)
      max_flex:
        type: integer
        format: int32
        description: Maximal flexibility that can be activated in the group (in KW)
      registration_list:
        type: array
        description: Registration ids
        items:
          type: number
          format: long
      validation_history:
        type: array
        description: Validation history related to regrouping
        items:
          $ref: '#/definitions/Validation'

  # Entities:
  #   type: object
  #   properties:
  #     offset:
  #       type: integer
  #       format: int32
  #       description: Position in pagination.
  #     limit:
  #       type: integer
  #       format: int32
  #       description: Number of items to retrieve (100 max).
  #     count:
  #       type: integer
  #       format: int32
  #       description: Total number of items available.
  #     validation:
  #       type: array
  #       items:
  #         $ref: '#/definitions/Entity'
  Validation:
    type: object
    properties:
      date:
        type: string
        format: date
        description: Validation date
      status:
        type: string
        description: New status
      reason:
        type: string
        description: Reason why the object was refused by the DSO.

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string

  Mapping:
    type: object
    properties:
      network_code:
        type: string
      code_GDO:
        type: string

  Mappings:
    type: object
    description: Common collection holder for xml binding of Mapping model
    properties:
      mapping:
        type: array
        description: Mappings list
        items:
          type: object
          $ref: '#/definitions/Mapping'

  Organizations:
    type: object
    description: Common collection holder for xml binding of Organization model
    properties:
      organization:
        type: array
        description: Organization list
        items:
          type: object
          $ref: '#/definitions/Organization'
